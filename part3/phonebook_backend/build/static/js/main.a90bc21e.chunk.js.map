{"version":3,"sources":["services/peoples.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newPerson","post","person","id","put","delete","Filter","persons","useState","filteredPersons","setNewFilteredPersons","onChange","event","filter","name","toLowerCase","includes","target","value","map","key","number","PersonForm","setPersons","setNotification","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","console","log","foundPerson","find","window","confirm","peoplesService","then","message","type","catch","error","response","data","Person","onClick","setTimeout","Persons","Notification","notification","className","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a90bc21e.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson);\n}\n\nconst update = (person, id) => {\n  return axios.put(`${baseUrl}/${id}`, person);\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n}\n\nexport default {getAll, create, update, remove}","import React, {useState} from 'react'\n\nconst Filter = ({persons}) => {\n  const [ filteredPersons, setNewFilteredPersons] = useState([]);\n\n  const handleFilterChange = (event) => {\n    setNewFilteredPersons( \n      persons.filter( person => \n        person.name.toLowerCase().includes(\n          event.target.value.toLowerCase()\n        )\n      )\n    )\n  }\n\n  return (\n    <div>\n      <p>filter shown with <input onChange={handleFilterChange} /></p>\n      {\n        filteredPersons.map( person => (\n          <p key={person.name}>{person.name} {person.number}</p>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Filter;","import React, {useState} from 'react'\nimport peoplesService from '../services/peoples'\n\nconst PersonForm = ({persons, setPersons, setNotification}) => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  \n  const handleNameChange = (event) => {\n    setNewName( event.target.value );\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber( event.target.value );\n  }\n\n  const handleNameSubmit = (event) => {\n    event.preventDefault();\n    console.log('persons', persons);\n    // There's a bug when adding exact objects from two different tabs\n    // Because persons doesn't change when tab1 adds a person, submitting\n    // the same object from tab2 is processed.\n    // Gonna fix later lol\n    const foundPerson = persons.find( person => person.name === newName );\n    if( foundPerson ) {\n      // Update existing person's number\n      if( window.confirm(`${foundPerson.name} is already added to phonebook, replace the old number with a new one?`)) {  \n        peoplesService\n          .update({...foundPerson, number:newNumber}, foundPerson.id)\n          .then( () => {\n            setNewName('');\n            setNewNumber('');\n            setNotification({\n              message:`Updated phone number of ${foundPerson.name}`, \n              type:'success'\n            });\n          })\n          .catch( error => {\n            console.log('error.response from update', error.response)\n            setNotification({\n              message: error.response.data.error, \n              type:'error'\n            });\n          })\n  \n        peoplesService\n          .getAll()\n          .then( response => setPersons(response.data) )\n        \n      }\n    } else {\n      // Add new person to db\n      const newPerson = {name: newName, number: newNumber}\n      console.log('Creating', newPerson);\n      peoplesService\n        .create(newPerson)\n        .then( response => {\n          console.log(response.data)\n          setNewName('');\n          setNewNumber('');\n          setNotification({\n            message:`Added ${newPerson.name}`, \n            type:'success'\n          });\n        })\n        .catch( error => {\n          console.log('error.response', error.response)\n          setNotification({\n            message: error.response.data.error, \n            type:'error'\n          });\n        })\n      \n\n      peoplesService\n        .getAll()\n        .then( response => setPersons(response.data) )\n    }\n  }\n\n  return (\n    <form onSubmit={handleNameSubmit}>\n      name: <input onChange={handleNameChange} value={newName}/>\n      number: <input onChange={handleNumberChange} value={newNumber} />\n      <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\nimport peoplesService from '../services/peoples'\n\nconst Person = ({person, setPersons, setNotification}) => {\n  const handleDeleteClick = (event) => {\n    if( window.confirm(`Delete ${person.name}?`) ) {\n      console.log('Deleting', person);\n      peoplesService\n        .remove(person.id)\n        .then( () => {\n          setNotification({\n            message:`Deleted ${person.name}`, \n            type:'success'\n          });\n          setTimeout(() => setNotification(null), 5000);\n        })\n        .catch( (error) => {\n          setNotification({\n            message:`Error occured while deleting ${person.name}`, \n            type:'error'\n          });\n          setTimeout(() => setNotification(null), 5000);\n        })\n      \n      peoplesService\n        .getAll()\n        .then( response => {\n          setPersons(response.data);\n        })\n    }\n  }\n  \n  return (\n    <div>\n      <p>{person.name} {person.number} <button onClick={handleDeleteClick}>delete</button></p>\n    </div>\n  )\n}\n\nconst Persons = ({persons, setPersons, setNotification}) => {\n  return (\n    <div>\n      {persons.map( person => (\n        <Person key={person.name} person={person} setPersons={setPersons} setNotification={setNotification} />\n        )\n      )}\n    </div>\n  )\n}\n\nexport default Persons;","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({notification, setNotification}) => {\n  if( notification == null ) {\n    return <></>\n  }\n  setTimeout(() => setNotification(null), 5000);\n  return (\n    <div className={notification.type}>{notification.message}</div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport peoplesService from './services/peoples' \nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  useEffect( () => {\n    peoplesService.getAll()\n      .then( response => {\n        console.log(response);\n        setPersons(response.data);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} setNotification={setNotification}/>\n      <Filter persons={persons} />\n\n      <h3>Add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setNotification={setNotification}/>\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} setPersons={setPersons} setNotification={setNotification}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}